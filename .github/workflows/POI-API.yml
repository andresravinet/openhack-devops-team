name: POI-API

env:
  registry: openhackgzr6pvd5acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  webapp_name: openhackgzr6pvd5poi

on:
  push:
    branches: [ master ]
    paths: 
      - apis/poi/**
      - .github/workflows/POI-API.yml
  pull_request:
    branches: [ master ]
    paths:
      - apis/poi/**
      - .github/workflows/POI-API.yml

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      #with:
        #dotnet-version: 3.1.301
    - name: Install dependencies 
      run: dotnet restore apis/poi/web/*.csproj
    - name: Build
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj
    - name: Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj
    - name: Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            assignees: [ '${{ github.actor }}' ],
            body: 'POI Build failed'
          });
          
  docker_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:     
    - uses: actions/checkout@v2
    - name: Docker login
      uses: Azure/docker-login@v1     
      with:
        #ACR name
        username: ${{ secrets.ACR_LOGIN }}
        #ACR password
        password: ${{ secrets.ACR_KEY }}
        #ACR URL
        login-server: ${{ secrets.ACR_REGISTRY }}
      #run: docker login $registry -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUBTOKEN }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

### The following code Deploys to Staging Slot. #####
  deploy_to_staging_slot:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure WebApp staging slot
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }} 
        slot-name: staging
        #images: openhackggp0ljh0acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }} 
        images: ${{ env.registry }}/${{ env.repository }}:${{ github.run_number }}   
 
    - name: Azure Logout
      run: az logout
      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

